@page "/pokeapi/{pokemonId}"
@using Pokedex.Components.Models
@using Pokedex.Components.Util
@inject PokeClient client

<div class="container py-5">
    @if (poke != null)
    {
        <div class="card mb-6 shadow-sm" style="max-width: 600px; border-radius: 15px; overflow: hidden;">
            <!-- Pokémon Image Section -->
            @if (poke.types.Count > 0)
            {
                <div class="card-top text-center p-3" style="background: linear-gradient(90deg, @TypeColor.GetColor(@poke.types[0].type.name), #fff);">
                    <img src="@poke.sprites.front_default" alt="@poke.name sprite" class="pokemon-img" style="max-height: 200px;">
                </div>
            }

            <!-- Pokémon Info Section -->
            <div class="card-body">
                <h1 class="text-center" style="font-weight: bold; text-transform: capitalize;">@poke.name</h1>
                <div class="text-center mb-3">
                    @foreach (var type in poke.types)
                    {
                        <span class="badge type-badge" style="background-color: @TypeColor.GetColor(type.type.name);">
                            @type.type.name
                        </span>
                    }
                </div>

                <div class="d-flex justify-content-between mb-3">
                    <h5><strong>Height:</strong> @poke.height m</h5>
                    <h5><strong>Weight:</strong> @poke.weight kg</h5>
                </div>

                
            </div>
            <div class="mb-6">
                <!-- Stats Section -->
                <h3 class="text-center mb-3">Stats</h3>
                @foreach (var stat in poke.stats)
                {
                    <div class="mb-2">
                        <h6 class="mb-1" style="text-transform: capitalize;">@stat.stat.name</h6>
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped" role="progressbar"
                                 style="width: @stat.base_stat%; background-color: @StatColor.GetColor(stat.stat.name);"
                                 aria-valuenow="@stat.base_stat" aria-valuemin="0" aria-valuemax="200">
                                @stat.base_stat
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <!-- Loading State -->
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p>Loading Pokémon...</p>
        </div>
    }
</div>

@code {
    [Parameter]
    public string pokemonId { get; set; } = "";

    Pokemon? poke;

    protected override async Task OnInitializedAsync()
    {
        poke = await client.GetPokemon(pokemonId);
    }
}
